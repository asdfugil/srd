% lldb -- cryptexctl install -p -l  --variant=research --persist com.example.cryptex.cxbd.signed
(lldb) target create "cryptexctl"
Current executable set to 'cryptexctl' (x86_64).
(lldb) settings set -- target.run-args  "install" "-p" "-l" "--variant=research" "--persist" "com.example.cryptex.cxbd.signed"
(lldb) r
Process 52727 launched: '/usr/local/bin/cryptexctl' (x86_64)
2022-03-15 13:37:13.956475-0400 cryptexctl[52727:205782] [library] USBMuxListenerCreateFiltered:898 Created 0x600003300000
2022-03-15 13:37:13.956585-0400 cryptexctl[52727:205801] [library] USBMuxHandleDictionary:1437 Adding event 0x600000218020 to changelist.
2022-03-15 13:37:13.958234-0400 cryptexctl[52727:205782] [device-manager] [anonymous]: devices list = (
    "AMDevice 0x600003d04000 {UDID = 00008030-001538D03C40012E, device ID = 1, location ID = 0x14500000, product ID = 0x12a8}"
)
2022-03-15 13:37:13.958283-0400 cryptexctl[52727:205782] [device-manager] [anonymous]: enumerating device: AMDevice 0x600003d04000 {UDID = 00008030-001538D03C40012E, device ID = 1, location ID = 0x14500000, product ID = 0x12a8}
2022-03-15 13:37:13.958370-0400 cryptexctl[52727:205782] [library] USBMuxConnectByPort:584 Connecting to port 32498 (f2, 7e)
2022-03-15 13:37:13.960716-0400 cryptexctl[52727:205782] [device-manager] [anonymous]: query = {
    NULL =     (
        UniqueDeviceID,
        DeviceName,
        BuildVersion,
        Image4CryptoHashMethod,
        BoardId,
        ChipID,
        SecurityDomain,
        UniqueChipID,
        CertificateProductionStatus,
        CertificateSecurityMode,
        EffectiveProductionStatusAp,
        EffectiveSecurityModeAp
    );
}
2022-03-15 13:37:13.960784-0400 cryptexctl[52727:205782] [library] USBMuxConnectByPort:584 Connecting to port 32498 (f2, 7e)
2022-03-15 13:37:13.964152-0400 cryptexctl[52727:205782] [library] USBMuxConnectByPort:584 Connecting to port 32498 (f2, 7e)
2022-03-15 13:37:13.973339-0400 cryptexctl[52727:205782] [device-manager] [anonymous]: query result = {
    SuccessValueKey =     {
        NULL =         {
            BoardId = 4;
            BuildVersion = 19E241;
            CertificateProductionStatus = 1;
            CertificateSecurityMode = 1;
            ChipID = 32816;
            DeviceName = "D Hoyt\U2019s iPhone";
            EffectiveProductionStatusAp = 1;
            EffectiveSecurityModeAp = 1;
            Image4CryptoHashMethod = "sha2-384";
            SecurityDomain = 1;
            UniqueChipID = 5973441526104366;
            UniqueDeviceID = "00008030-001538D03C40012E";
        };
    };
}
2022-03-15 13:37:13.973431-0400 cryptexctl[52727:205782] [device-manager] [anonymous]: instantiating identity from: {
    BoardId = 4;
    BuildVersion = 19E241;
    CertificateProductionStatus = 1;
    CertificateSecurityMode = 1;
    ChipID = 32816;
    DeviceName = "D Hoyt\U2019s iPhone";
    EffectiveProductionStatusAp = 1;
    EffectiveSecurityModeAp = 1;
    Image4CryptoHashMethod = "sha2-384";
    SecurityDomain = 1;
    UniqueChipID = 5973441526104366;
    UniqueDeviceID = "00008030-001538D03C40012E";
}
2022-03-15 13:37:13.973481-0400 cryptexctl[52727:205782] [device-manager] [anonymous]: device: udid = 00008030-001538D03C40012E, name = SRD0009, build = 19E241
2022-03-15 13:37:13.973523-0400 cryptexctl[52727:205782] [device-manager] [anonymous]: identity = '04 00 00 00 00 00 00 00 70 41 CF 4F F8 7F 00 00 00 00 00 00 00 00 00 00 01 00 00 00 04 00 00 00 30 80 00 00 01 00 00 00 2E 01 40 3C D0 38 15 00 01 01 01 01 00 00 00 00 00 00 00 00 00 00 00 00 A0 99 20 00 00 60 00 00 40 9B 20 00 00 60 00 00 30 81 00 00 00 60 00 00'
2022-03-15 13:37:13.973683-0400 cryptexctl[52727:205782] [device] [anonymous]: setting name: SRD0009
2022-03-15 13:37:13.979446-0400 cryptexctl[52727:205782] [library] USBMuxConnectByPort:584 Connecting to port 32498 (f2, 7e)
2022-03-15 13:37:13.983513-0400 cryptexctl[52727:205782] [library] USBMuxConnectByPort:584 Connecting to port 32498 (f2, 7e)
2022-03-15 13:37:14.035836-0400 cryptexctl[52727:205782] [device] SRD0009: connected to device: AMDevice 0x600003d04000 {UDID = 00008030-001538D03C40012E, device ID = 1, location ID = 0x14500000, product ID = 0x12a8}
Process 52727 stopped
* thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0x10)
    frame #0: 0x00000001000112ce cryptexctl`___lldb_unnamed_symbol103$$cryptexctl + 206
cryptexctl`___lldb_unnamed_symbol103$$cryptexctl:
->  0x1000112ce <+206>: movl   0x10(%rax), %edi
    0x1000112d1 <+209>: movq   %r15, %rsi
    0x1000112d4 <+212>: callq  0x10003402c               ; symbol stub for: realpath_np
    0x1000112d9 <+217>: testl  %eax, %eax
Target 0: (cryptexctl) stopped.
(lldb) dis -f
cryptexctl`___lldb_unnamed_symbol103$$cryptexctl:
    0x100011200 <+0>:   pushq  %rbp
    0x100011201 <+1>:   movq   %rsp, %rbp
    0x100011204 <+4>:   pushq  %r15
    0x100011206 <+6>:   pushq  %r14
    0x100011208 <+8>:   pushq  %r12
    0x10001120a <+10>:  pushq  %rbx
    0x10001120b <+11>:  subq   $0x410, %rsp              ; imm = 0x410
    0x100011212 <+18>:  movq   %rdx, %r14
    0x100011215 <+21>:  movq   %rdi, %rbx
    0x100011218 <+24>:  movq   0x36e01(%rip), %rax       ; (void *)0x00007ff850ba0660: __stack_chk_guard
    0x10001121f <+31>:  movq   (%rax), %rax
    0x100011222 <+34>:  movq   %rax, -0x28(%rbp)
    0x100011226 <+38>:  movq   0x8(%rsi), %r12
    0x10001122a <+42>:  testb  $0x20, (%r12)
    0x10001122f <+47>:  jne    0x1000112ab               ; <+171>
    0x100011231 <+49>:  xorps  %xmm0, %xmm0
    0x100011234 <+52>:  leaq   -0x430(%rbp), %rsi
    0x10001123b <+59>:  movaps %xmm0, 0x20(%rsi)
    0x10001123f <+63>:  movaps %xmm0, 0x10(%rsi)
    0x100011243 <+67>:  movaps %xmm0, (%rsi)
    0x100011246 <+70>:  movq   $0x0, 0x30(%rsi)
    0x10001124e <+78>:  movq   0x18(%r12), %rax
    0x100011253 <+83>:  movq   0x38(%rbx,%rax,8), %rax
    0x100011258 <+88>:  movl   0x10(%rax), %edi
    0x10001125b <+91>:  callq  0x100021df7               ; ___lldb_unnamed_symbol258$$cryptexctl
    0x100011260 <+96>:  testl  %eax, %eax
    0x100011262 <+98>:  jne    0x100011328               ; <+296>
    0x100011268 <+104>: movq   -0x430(%rbp), %rsi
    0x10001126f <+111>: movq   -0x428(%rbp), %rdx
    0x100011276 <+118>: movq   0x36e6b(%rip), %rax       ; (void *)0x00007ff851fd1700: kCFAllocatorMalloc
    0x10001127d <+125>: movq   (%rax), %rcx
    0x100011280 <+128>: xorl   %edi, %edi
    0x100011282 <+130>: callq  0x100033a68               ; symbol stub for: CFDataCreateWithBytesNoCopy
    0x100011287 <+135>: testq  %rax, %rax
    0x10001128a <+138>: je     0x100011356               ; <+342>
    0x100011290 <+144>: movq   %rax, %rbx
    0x100011293 <+147>: movq   $0x0, -0x408(%rbp)
    0x10001129e <+158>: movq   %rax, %rdi
    0x1000112a1 <+161>: callq  0x100033ae0               ; symbol stub for: CFRetain
    0x1000112a6 <+166>: movq   %rax, %r15
    0x1000112a9 <+169>: jmp    0x1000112fc               ; <+252>
    0x1000112ab <+171>: leaq   -0x430(%rbp), %r15
    0x1000112b2 <+178>: movl   $0x400, %edx              ; imm = 0x400
    0x1000112b7 <+183>: movq   %r15, %rdi
    0x1000112ba <+186>: movl   $0xaa, %esi
    0x1000112bf <+191>: callq  0x100033f60               ; symbol stub for: memset
    0x1000112c4 <+196>: movq   0x18(%r12), %rax
    0x1000112c9 <+201>: movq   0x38(%rbx,%rax,8), %rax
->  0x1000112ce <+206>: movl   0x10(%rax), %edi
    0x1000112d1 <+209>: movq   %r15, %rsi
    0x1000112d4 <+212>: callq  0x10003402c               ; symbol stub for: realpath_np
    0x1000112d9 <+217>: testl  %eax, %eax
    0x1000112db <+219>: jne    0x100011338               ; <+312>
    0x1000112dd <+221>: leaq   -0x430(%rbp), %rdi
    0x1000112e4 <+228>: callq  0x10000c0b6               ; ___lldb_unnamed_symbol57$$cryptexctl
    0x1000112e9 <+233>: movq   %rax, %rbx
    0x1000112ec <+236>: movq   %rax, %rdi
    0x1000112ef <+239>: callq  0x100033ae0               ; symbol stub for: CFRetain
    0x1000112f4 <+244>: movq   %rax, %r15
    0x1000112f7 <+247>: testq  %rbx, %rbx
    0x1000112fa <+250>: je     0x100011304               ; <+260>
    0x1000112fc <+252>: movq   %rbx, %rdi
    0x1000112ff <+255>: callq  0x100033ada               ; symbol stub for: CFRelease
    0x100011304 <+260>: movq   %r15, (%r14)
    0x100011307 <+263>: xorl   %ebx, %ebx
    0x100011309 <+265>: movq   0x36d10(%rip), %rax       ; (void *)0x00007ff850ba0660: __stack_chk_guard
    0x100011310 <+272>: movq   (%rax), %rax
    0x100011313 <+275>: cmpq   -0x28(%rbp), %rax
    0x100011317 <+279>: jne    0x100011351               ; <+337>
    0x100011319 <+281>: movl   %ebx, %eax
    0x10001131b <+283>: leaq   -0x20(%rbp), %rsp
    0x10001131f <+287>: popq   %rbx
    0x100011320 <+288>: popq   %r12
    0x100011322 <+290>: popq   %r14
    0x100011324 <+292>: popq   %r15
    0x100011326 <+294>: popq   %rbp
    0x100011327 <+295>: retq
    0x100011328 <+296>: movl   %eax, %ebx
    0x10001132a <+298>: movq   0x30(%r12), %rdx
    0x10001132f <+303>: leaq   0x2d2bc(%rip), %rsi       ; "failed to read %s"
    0x100011336 <+310>: jmp    0x100011346               ; <+326>
    0x100011338 <+312>: movl   %eax, %ebx
    0x10001133a <+314>: movq   0x30(%r12), %rdx
    0x10001133f <+319>: leaq   0x2d296(%rip), %rsi       ; "failed to get path %s"
    0x100011346 <+326>: movl   %ebx, %edi
    0x100011348 <+328>: xorl   %eax, %eax
    0x10001134a <+330>: callq  0x100034176               ; symbol stub for: warnc
    0x10001134f <+335>: jmp    0x100011309               ; <+265>
    0x100011351 <+337>: callq  0x100033bbe               ; symbol stub for: __stack_chk_fail
    0x100011356 <+342>: movl   $0xc, %edi
    0x10001135b <+347>: callq  0x100033c00               ; symbol stub for: _os_log_pack_size
    0x100011360 <+352>: movq   %rax, %rbx
    0x100011363 <+355>: callq  0x100003060               ; ___lldb_unnamed_symbol3$$cryptexctl
    0x100011368 <+360>: addq   $0xf, %rax
    0x10001136c <+364>: andq   $-0x10, %rax
    0x100011370 <+368>: subq   %rax, %rsp
    0x100011373 <+371>: movq   %rsp, %r14
    0x100011376 <+374>: testq  %rbx, %rbx
    0x100011379 <+377>: je     0x10001138b               ; <+395>
    0x10001137b <+379>: movq   %r14, %rdi
    0x10001137e <+382>: movl   $0xaa, %esi
    0x100011383 <+387>: movq   %rbx, %rdx
    0x100011386 <+390>: callq  0x100033f60               ; symbol stub for: memset
    0x10001138b <+395>: callq  0x100033bac               ; symbol stub for: __error
    0x100011390 <+400>: movl   (%rax), %edx
    0x100011392 <+402>: leaq   -0x11399(%rip), %rcx      ; _mh_execute_header
    0x100011399 <+409>: leaq   0x32ee0(%rip), %r8        ; "cf create failed: obj = %s"
    0x1000113a0 <+416>: movq   %r14, %rdi
    0x1000113a3 <+419>: movq   %rbx, %rsi
    0x1000113a6 <+422>: callq  0x100033bfa               ; symbol stub for: _os_log_pack_fill
    0x1000113ab <+427>: movl   $0x8200102, (%rax)        ; imm = 0x8200102
    0x1000113b1 <+433>: leaq   0x2aa83(%rip), %rcx       ; "CFData"
    0x1000113b8 <+440>: movq   %rcx, 0x4(%rax)
    0x1000113bc <+444>: movq   %r14, %rdi
    0x1000113bf <+447>: movq   %rbx, %rsi
    0x1000113c2 <+450>: callq  0x100033bee               ; symbol stub for: _os_crash_fmt
    0x1000113c7 <+455>: ud2
    0x1000113c9 <+457>: nop
    0x1000113ca <+458>: nop
    0x1000113cb <+459>: nop
    0x1000113cc <+460>: nop
    0x1000113cd <+461>: nop
    0x1000113ce <+462>: nop
    0x1000113cf <+463>: nop
(lldb) re re --all
General Purpose Registers:
       rax = 0x0000000000000000
       rbx = 0x000060000300c090
       rcx = 0x0000000000000020
       rdx = 0xffffffffffffffe0
       rdi = 0x00007ff7bfeff4c0
       rsi = 0xaaaaaaaaaaaaaaaa
       rbp = 0x00007ff7bfeff510
       rsp = 0x00007ff7bfeff0e0
        r8 = 0x00000000000004d0
        r9 = 0x00000000000000b0
       r10 = 0x00000000000007fb
       r11 = 0x000000000000005c
       r12 = 0x00007ffa5175eef8  libcryptex_core.dylib`_cryptex_asset_type_cpxd
       r13 = 0x000060000300c090
       r14 = 0x00007ff7bfeff598
       r15 = 0x00007ff7bfeff0e0
       rip = 0x00000001000112ce  cryptexctl`___lldb_unnamed_symbol103$$cryptexctl + 206
    rflags = 0x0000000000010283
        cs = 0x000000000000002b
        fs = 0x0000000000000000
        gs = 0x0000000000000000
       eax = 0x00000000
       ebx = 0x0300c090
       ecx = 0x00000020
       edx = 0xffffffe0
       edi = 0xbfeff4c0
       esi = 0xaaaaaaaa
       ebp = 0xbfeff510
       esp = 0xbfeff0e0
       r8d = 0x000004d0
       r9d = 0x000000b0
      r10d = 0x000007fb
      r11d = 0x0000005c
      r12d = 0x5175eef8
      r13d = 0x0300c090
      r14d = 0xbfeff598
      r15d = 0xbfeff0e0
        ax = 0x0000
        bx = 0xc090
        cx = 0x0020
        dx = 0xffe0
        di = 0xf4c0
        si = 0xaaaa
        bp = 0xf510
        sp = 0xf0e0
       r8w = 0x04d0
       r9w = 0x00b0
      r10w = 0x07fb
      r11w = 0x005c
      r12w = 0xeef8
      r13w = 0xc090
      r14w = 0xf598
      r15w = 0xf0e0
        ah = 0x00
        bh = 0xc0
        ch = 0x00
        dh = 0xff
        al = 0x00
        bl = 0x90
        cl = 0x20
        dl = 0xe0
       dil = 0xc0
       sil = 0xaa
       bpl = 0x10
       spl = 0xe0
       r8l = 0xd0
       r9l = 0xb0
      r10l = 0xfb
      r11l = 0x5c
      r12l = 0xf8
      r13l = 0x90
      r14l = 0x98
      r15l = 0xe0

Floating Point Registers:
     fctrl = 0x037f
     fstat = 0x0000
      ftag = 0x0000
       fop = 0x0000
     fioff = 0x0f43b408
     fiseg = 0x7ff8
     fooff = 0x00000000
     foseg = 0x0000
     mxcsr = 0x00001fa0
  mxcsrmask = 0x0000ffff
     stmm0 = {0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0xff 0xff}
     stmm1 = {0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00}
     stmm2 = {0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00}
     stmm3 = {0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00}
     stmm4 = {0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00}
     stmm5 = {0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0xff 0xff}
     stmm6 = {0xbe 0x8c 0x53 0x03 0x00 0x00 0x00 0x00 0xff 0xff}
     stmm7 = {0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00}
      ymm0 = {0xaa 0xaa 0xaa 0xaa 0xaa 0xaa 0xaa 0xaa 0xaa 0xaa 0xaa 0xaa 0xaa 0xaa 0xaa 0xaa 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00}
      ymm1 = {0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00}
      ymm2 = {0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00}
      ymm3 = {0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00}
      ymm4 = {0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00}
      ymm5 = {0x0f 0x0e 0x0d 0x0c 0x0b 0x0a 0x09 0x08 0x07 0x06 0x05 0x04 0x03 0x02 0x01 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00}
      ymm6 = {0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00}
      ymm7 = {0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00}
      ymm8 = {0x14 0x00 0x00 0x0c 0x6e 0xa1 0xdc 0x2c 0xf6 0x59 0xf1 0xf8 0xd3 0xf4 0xe2 0xba 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00}
      ymm9 = {0xd6 0xc1 0xe2 0x79 0xd6 0xb9 0x55 0xd5 0xd6 0xff 0x75 0xcc 0xd7 0xc5 0xba 0x1f 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00}
     ymm10 = {0xd6 0xc1 0x62 0xca 0xd6 0x45 0x76 0x4b 0xd8 0xb9 0x6d 0x88 0xd6 0xd6 0xb6 0x45 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00}
     ymm11 = {0x85 0x81 0xc5 0xa4 0x9c 0xab 0x7b 0x16 0x52 0x02 0x9c 0x4a 0xeb 0x40 0x3f 0xd6 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00}
     ymm12 = {0x26 0x54 0xf7 0x2f 0x42 0xc7 0x5e 0x41 0xc9 0xf3 0xe5 0xef 0x1f 0x7e 0x61 0xcf 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00}
     ymm13 = {0x72 0x6e 0x4f 0x64 0xee 0xc5 0x34 0x72 0xbc 0xc7 0xa8 0x38 0x57 0x87 0x97 0xee 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00}
     ymm14 = {0x7d 0x43 0x7f 0x07 0x3f 0x84 0x21 0x46 0xf6 0x77 0xc4 0xa9 0xe9 0x09 0xa5 0x66 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00}
     ymm15 = {0x3c 0x73 0x1d 0x4f 0x25 0x17 0xb7 0x97 0x27 0xca 0x57 0xba 0xe8 0x62 0xee 0x49 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00}
      xmm0 = {0xaa 0xaa 0xaa 0xaa 0xaa 0xaa 0xaa 0xaa 0xaa 0xaa 0xaa 0xaa 0xaa 0xaa 0xaa 0xaa}
      xmm1 = {0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00}
      xmm2 = {0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00}
      xmm3 = {0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00}
      xmm4 = {0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00}
      xmm5 = {0x0f 0x0e 0x0d 0x0c 0x0b 0x0a 0x09 0x08 0x07 0x06 0x05 0x04 0x03 0x02 0x01 0x00}
      xmm6 = {0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00}
      xmm7 = {0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00}
      xmm8 = {0x14 0x00 0x00 0x0c 0x6e 0xa1 0xdc 0x2c 0xf6 0x59 0xf1 0xf8 0xd3 0xf4 0xe2 0xba}
      xmm9 = {0xd6 0xc1 0xe2 0x79 0xd6 0xb9 0x55 0xd5 0xd6 0xff 0x75 0xcc 0xd7 0xc5 0xba 0x1f}
     xmm10 = {0xd6 0xc1 0x62 0xca 0xd6 0x45 0x76 0x4b 0xd8 0xb9 0x6d 0x88 0xd6 0xd6 0xb6 0x45}
     xmm11 = {0x85 0x81 0xc5 0xa4 0x9c 0xab 0x7b 0x16 0x52 0x02 0x9c 0x4a 0xeb 0x40 0x3f 0xd6}
     xmm12 = {0x26 0x54 0xf7 0x2f 0x42 0xc7 0x5e 0x41 0xc9 0xf3 0xe5 0xef 0x1f 0x7e 0x61 0xcf}
     xmm13 = {0x72 0x6e 0x4f 0x64 0xee 0xc5 0x34 0x72 0xbc 0xc7 0xa8 0x38 0x57 0x87 0x97 0xee}
     xmm14 = {0x7d 0x43 0x7f 0x07 0x3f 0x84 0x21 0x46 0xf6 0x77 0xc4 0xa9 0xe9 0x09 0xa5 0x66}
     xmm15 = {0x3c 0x73 0x1d 0x4f 0x25 0x17 0xb7 0x97 0x27 0xca 0x57 0xba 0xe8 0x62 0xee 0x49}

Exception State Registers:
    trapno = 0x0000000e
       err = 0x00000004
  faultvaddr = 0x0000000000000010

(lldb)